{"version":3,"sources":["api/AirVisual.js","components/uis/LocationChoices.js","components/uis/SearchBar.js","components/uis/WeatherDetails.js","components/uis/WeatherDetailMobile.js","components/RightBar.js","components/uis/LeftWeatherDetail.js","components/LeftContents.js","App.js","index.js"],"names":["API_KEY","url","AirVisual","a","axios","get","catch","err","console","log","response","city","state","country","LocationChoices","getNewCityData","className","onClick","SearchBar","term","value","this","setState","str","attr","split","length","props","type","placeholder","onChange","e","onInputChange","target","onSearchClick","React","Component","WeatherDetails","degree","currentData","weather","pr","hu","ws","wd","pollution","aqius","aqicn","WeatherDetailMobile","icon","weatherData","src","current","ic","alt","tp","RightBar","LeftWeatherDetail","LeftContents","emptyData","App","getWeatherData","airvisual","data","changebg","getAllCountries","weatherIcon","startsWith","style","backgroundImage","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0b08ee63.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '966bdcfb-d389-4f07-8805-a9dc6e9baa68'\nconst url = 'https://api.airvisual.com/v2'\n\nclass AirVisual {\n\n    async getAllCountries() {\n        const response = await axios.get(`${url}/countries?key=${API_KEY}`).catch((err) => {\n            console.log(err);\n        });\n\n        return response;\n    };\n\n    async getWeatherData(city, state, country) {\n        const response = await axios.get(`${url}/city?city=${city}&state=${state}&country=${country}&key=${API_KEY}`)\n\n        return response;\n    }\n}\n\nexport default AirVisual","import React from 'react';\n\nconst LocationChoices = ({ getNewCityData }) => {\n    return (\n        <div className=\"desktop-only\">\n            <ul>\n                <li className=\"city-link\" onClick={() => {getNewCityData(\"London\",\"England\",\"United Kingdom\")}}>London</li>\n                <li className=\"city-link\" onClick={() => {getNewCityData(\"Sydney\",\"New%20South%20Wales\",\"Australia\")}}>Sydney</li>\n                <li className=\"city-link\" onClick={() => {getNewCityData(\"Tokyo\",\"Tokyo\",\"Japan\")}}>Tokyo</li>\n                <li className=\"city-link\" onClick={() => {getNewCityData(\"Beijing\",\"Beijing\",\"China\")}}>Beijing</li>\n            </ul>\n        </div>\n    )\n}\n\n\nexport default LocationChoices;","import React from 'react';\n\n\nclass SearchBar extends React.Component {\n\n    state = { term: '' }\n\n    onInputChange(value) {\n        this.setState({ term: value })\n    }\n\n    onSearchClick(str) {\n        const attr = str.split(',')\n        if (attr.length === 3) {\n            this.props.getNewCityData(attr[0], attr[1], attr[2])\n        }\n        this.setState({ term: '' })\n    }\n\n    render() {\n        return (\n            <div className=\"search-container\">\n                <div className=\"search-input-div\">\n                    <input className=\"search-input\" value={this.state.term} type=\"text\" placeholder=\"City,State,Country\" onChange={(e) => {this.onInputChange(e.target.value)}} />\n                    <div className=\"ui inverted divider\"></div>\n                </div>  \n                <button className=\"search-button\" onClick={ () => this.onSearchClick(this.state.term)}><i className=\"big search icon\"></i></button>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react'\n\nconst WeatherDetails = ({ currentData }) => {\n\n    const getWindDirection = (degree) => {\n\n        if (degree == 0) {\n            return \"N\"\n        }\n        if (degree > 0 && degree < 90) {\n            return `NE ${degree}째`\n        }\n        if (degree == 90) {\n            return \"E\"\n        }\n        if (degree > 90 && degree < 180) {\n            return `SE ${180 - degree}째`\n        }\n        if (degree == 180) {\n            return \"S\"\n        }\n        if (degree > 180 && degree < 270) {\n            return `SW ${degree - 180}째`\n        }\n        if (degree == 270) {\n            return \"W\"\n        }\n        if (degree > 270 && degree < 360) {\n            return `NW ${360 - degree}째`\n        }\n\n        return \"--\"\n    }\n\n    return (\n        <div>\n            <h1 className=\"section-title\">Weather Details</h1>\n            <ul>\n                <li><label className=\"left-label\">Pressure</label><label className=\"right-label\">{currentData.weather.pr} hPa</label></li>\n                <li><label className=\"left-label\">Humidity</label><label className=\"right-label\">{currentData.weather.hu}%</label></li>\n                <li><label className=\"left-label\">Wind Speed</label><label className=\"right-label\">{currentData.weather.ws} m/s</label></li>\n                <li><label className=\"left-label\">Wind Direction</label><label className=\"right-label\">{getWindDirection(currentData.weather.wd)}</label></li>\n                <li><label className=\"left-label\">AQI US</label><label className=\"right-label\">{currentData.pollution.aqius}</label></li>\n                <li><label className=\"left-label\">AQI CN</label><label className=\"right-label\">{currentData.pollution.aqicn}</label></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default WeatherDetails;","import React from 'react'\n\nconst iconURL = \"https://airvisual.com/images/\"\n\nconst WeatherDetailMobile = ({ weatherData }) => {\n\n    const getIcon = (icon) => {\n        if (icon[0] === \"1\" && icon[1] === \"0\") {\n            return icon\n        }\n        if (icon[0] === \"0\" && icon[1] === \"1\") {\n            return icon\n        }\n        return (icon[0] + icon[1] + \"d\")\n    }\n\n    return (\n        <div className=\"mobile-only\">\n            <p className=\"city-name\">{weatherData.city}</p>\n            <div className=\"weather-icon\">\n                <img src={iconURL + getIcon(weatherData.current.weather.ic) + '.png'} alt={weatherData.current.weather.ic}/>\n            </div>\n            <div className=\"weather-degree\">\n                <h1>{weatherData.current.weather.tp}째C</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherDetailMobile","import React from 'react'\n\nimport LocationChoices from './uis/LocationChoices';\nimport SearchBar from './uis/SearchBar';\nimport WeatherDetails from './uis/WeatherDetails';\nimport WeatherDetailMobile from './uis/WeatherDetailMobile';\n\nconst RightBar = ({ weatherData, getNewCityData }) => {\n\n    return (\n        <div className='right-bar'>\n            <div className='fixed'></div>\n            <div className='content'>\n                <SearchBar getNewCityData={getNewCityData} />\n                <div className='divider-container'>\n                    <WeatherDetailMobile weatherData={weatherData}/>\n                    <LocationChoices getNewCityData={getNewCityData} />\n                    <div className=\"ui inverted divider\"></div>\n                    <WeatherDetails currentData={weatherData.current} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default RightBar;","import React from 'react';\n\n\nconst iconURL = \"https://airvisual.com/images/\"\n\nconst LeftWeatherDetail = ({ weatherData }) => {\n\n\n    const getIcon = (icon) => {\n        if (icon[0] === \"1\" && icon[1] === \"0\") {\n            return icon\n        }\n        if (icon[0] === \"0\" && icon[1] === \"1\") {\n            return icon\n        }\n        return (icon[0] + icon[1] + \"d\")\n    }\n\n    return (\n        <div className=\"weather-detail-container\">\n                <div className=\"weather-detail\">\n                    <div className=\"weather-degree\">\n                        <h1>{weatherData.current.weather.tp}째C</h1>\n                    </div>\n                    <div className=\"city-details\">\n                        <div>\n                            <p className=\"city-name\">{weatherData.city}</p>\n                        </div>\n                    </div>\n                    <div className=\"weather-icon\">\n                        <img src={iconURL + getIcon(weatherData.current.weather.ic) + '.png'} alt={weatherData.current.weather.ic}/>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\n\nexport default LeftWeatherDetail;","import React from 'react';\n\nimport LeftWeatherDetail from './uis/LeftWeatherDetail';\n\nconst LeftContents = ({ weatherData }) => {\n    return (\n        <div className='left-contents'>\n                <LeftWeatherDetail weatherData={weatherData} />\n            </div>\n    )\n}\n\nexport default LeftContents;","import React from 'react'\n\nimport AirVisual from './api/AirVisual'\nimport RightBar from './components/RightBar'\nimport LeftContents from './components/LeftContents'\n\nconst emptyData = {\n    \"data\":{\n        \"city\":\"--\",\n        \"state\":\"--\",\n        \"country\":\"--\",\n        \"location\":{\n            \"type\":\"--\",\n            \"coordinates\":[0,0]\n        },\n        \"current\":{\n            \"weather\":{\n                \"ts\":\"--\",\n                \"tp\":\"--\",\n                \"pr\":\"--\",\n                \"hu\":\"--\",\n                \"ws\":\"--\",\n                \"wd\":\"--\",\n                \"ic\":\"03d\"\n            },\n            \"pollution\":{\n                \"ts\":\"--\",\n                \"aqius\":\"--\",\n                \"mainus\":\"--\",\n                \"aqicn\":\"--\",\n                \"maincn\":\"--\"\n            }\n        }\n    }\n};\n\nclass App extends React.Component {\n\n    state = { weather: emptyData }\n    \n\n    componentDidMount() {\n        this.getWeatherData('Melbourne', 'victoria', 'Australia')\n    }\n\n    async getCountryData() {\n        const response = await this.airvisual.getAllCountries()\n        this.setState({ data: response })\n    }\n\n    setEmpty() {\n        this.setState({ weather: emptyData })\n    }\n\n    getWeatherData = async (city, state, country) => {\n        // this.setState({ weather: emptyData })\n        const airvisual = new AirVisual()\n        const response = await airvisual.getWeatherData(city, state, country)\n        this.setState({ weather: response.data })\n        this.changebg()\n    }\n\n    changebg() {\n        const weatherIcon = this.state.weather.data.current.weather.ic\n        if (weatherIcon.startsWith(\"01\")) {\n            return \"url('./img/sunny.jpg')\"\n        }\n        if (weatherIcon.startsWith(\"02\") || weatherIcon.startsWith(\"03\") || weatherIcon.startsWith(\"04\")) {\n            return \"url('./img/cloudy.jpg')\"\n        }\n        if (weatherIcon.startsWith(\"09\") || weatherIcon.startsWith(\"10\")) {\n            return \"url('./img/rainy.jpg')\"\n        }\n        if (weatherIcon.startsWith(\"11\")) {\n            return \"url('./img/thunder.jpg')\"\n        }\n        if (weatherIcon.startsWith(\"13\")) {\n            return \"url('./img/snowy.jpg')\"\n        }\n        if (weatherIcon.startsWith(\"50\")) {\n            return \"url('./img/windy.jpg')\"\n        }\n    }\n\n    render() {\n        return (<div className='container' >\n                \n                <div className='container bg' style={{backgroundImage:this.changebg()}}></div>\n                <div className='container content'>\n                        <LeftContents weatherData={this.state.weather.data}/>\n                        <RightBar weatherData={this.state.weather.data} getNewCityData={this.getWeatherData} />\n                </div>\n            </div>)\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}